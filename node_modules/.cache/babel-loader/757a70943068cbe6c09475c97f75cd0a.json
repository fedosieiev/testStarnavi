{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\starnavi_12\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Game from './components/Game/gameLow'; //import Game from './components/Game/gameAverage';\n//import Game from './components/Game/gameHigh';\n\nimport UserName from './components/UserName/username';\nimport UserInformation from './components/UserInformation/userInformation';\nimport GameLevel from './components/GameLevel/gameLevel';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sizeEasyMode: undefined,\n      sizeNormalMode: undefined,\n      sizeHardMode: undefined,\n      delayTimeEasyMode: undefined,\n      delayTimeNormalMode: undefined,\n      delayTimeHardMode: undefined,\n      userPoints: 0,\n      computerScores: 0,\n      userData: [],\n      victory: \" \",\n      yourNameState: \"\"\n    };\n\n    this.dataTransfer = value => {\n      this.setState({\n        yourNameState: value\n      });\n    };\n\n    this.user = () => {\n      this.setState({\n        userPoints: this.state.userPoints + 1\n      });\n    };\n\n    this.computer = () => {\n      this.setState({\n        computerScores: this.state.computerScores + 1\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`);\n    const gameSettings = await response.json();\n    const responseUser = await fetch('https://starnavi-frontend-test-task.herokuapp.com/winners');\n    const userData = await responseUser.json();\n    this.setState({\n      sizeEasyMode: gameSettings.easyMode.field,\n      sizeNormalMode: gameSettings.normalMode.field,\n      sizeHardMode: gameSettings.hardMode.field,\n      delayTimeEasyMode: gameSettings.easyMode.delay,\n      delayTimeNormalMode: gameSettings.normalMode.delay,\n      delayTimeHardMode: gameSettings.hardMode.delay,\n      userData: userData,\n      victory: \"Winner in this game\"\n    });\n  }\n\n  render() {\n    const stylesLow = {\n      height: this.state.sizeEasyMode * 5 + 'rem',\n      width: this.state.sizeEasyMode * 5 + 'rem'\n    };\n    const stylesAverage = {\n      height: this.state.sizeEasyMode * 3 + 'rem',\n      width: this.state.sizeEasyMode * 3 + 'rem'\n    };\n    const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6', 'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13', 'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20', 'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n    const setBlue = () => {\n      const randomNumber = duel[Math.floor(Math.random() * 25)];\n      document.getElementById(randomNumber).style.backgroundColor = 'blue';\n      const timer = setTimeout(() => {\n        if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n          document.getElementById(randomNumber).style.backgroundColor = 'red';\n        }\n\n        if (document.getElementById(randomNumber).style.backgroundColor === 'red') this.computer();\n        setBlue();\n      }, this.state.delayTimeEasyMode);\n      if (this.state.computerScores > 12 || this.state.userPoints > 12) clearTimeout(timer);\n    };\n\n    const setGreen = e => {\n      const eventCell = e.target.style;\n      if (eventCell.backgroundColor === 'blue') eventCell.backgroundColor = 'green';\n      if (eventCell.backgroundColor === 'green') this.user();\n    };\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(GameLevel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"user-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(UserName, {\n      setBlue: setBlue,\n      dataTransfer: this.dataTransfer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.computerScores > 12 || this.state.userPoints > 12 ? this.state.victory : \"\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"   \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.computerScores > 12 ? \"Computer\" : \"\" || this.state.userPoints > 12 ? this.state.yourNameState : \"\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"your points: \", this.state.userPoints, \"; computer scores: \", this.state.computerScores)), React.createElement(\"div\", {\n      onClick: setGreen,\n      className: \"cellDiv\",\n      style: stylesLow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Game, {\n      sizeEasyMode: this.state.sizeEasyMode,\n      sizeNormalMode: this.state.sizeNormalMode,\n      sizeHardMode: this.state.sizeHardMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(UserInformation, {\n      dataTable: this.state.userData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/starnavi_12/src/App.js"],"names":["React","Component","Game","UserName","UserInformation","GameLevel","App","state","sizeEasyMode","undefined","sizeNormalMode","sizeHardMode","delayTimeEasyMode","delayTimeNormalMode","delayTimeHardMode","userPoints","computerScores","userData","victory","yourNameState","dataTransfer","value","setState","user","computer","componentDidMount","response","fetch","gameSettings","json","responseUser","easyMode","field","normalMode","hardMode","delay","render","stylesLow","height","width","stylesAverage","duel","setBlue","randomNumber","Math","floor","random","document","getElementById","style","backgroundColor","timer","setTimeout","clearTimeout","setGreen","e","eventCell","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Game from './components/Game/gameLow';\n//import Game from './components/Game/gameAverage';\n//import Game from './components/Game/gameHigh';\nimport UserName from './components/UserName/username';\nimport UserInformation from  './components/UserInformation/userInformation';\nimport GameLevel from  './components/GameLevel/gameLevel';\n\n\nexport default class App extends Component {\n   state = {\n      sizeEasyMode: undefined,\n      sizeNormalMode: undefined,\n      sizeHardMode: undefined,\n\n      delayTimeEasyMode: undefined,\n      delayTimeNormalMode: undefined,\n      delayTimeHardMode: undefined,\n      userPoints: 0,\n      computerScores: 0,\n      userData: [],\n      victory: \" \",\n      yourNameState: \"\",\n   }\n\n   async componentDidMount() {\n      const response = await\n            fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`,\n            )\n      const gameSettings = await response.json();\n\n      const responseUser = await\n            fetch('https://starnavi-frontend-test-task.herokuapp.com/winners'\n            )\n      const userData = await responseUser.json();\n\n      this.setState({\n         sizeEasyMode: gameSettings.easyMode.field,\n         sizeNormalMode: gameSettings.normalMode.field,\n         sizeHardMode: gameSettings.hardMode.field,\n\n         delayTimeEasyMode: gameSettings.easyMode.delay,\n         delayTimeNormalMode: gameSettings.normalMode.delay,\n         delayTimeHardMode: gameSettings.hardMode.delay,\n         userData: userData,\n         victory: \"Winner in this game\",\n      })\n   }\n\n   dataTransfer =(value) => {\n      this.setState({yourNameState: value})\n   }\n\n\tuser = () => {\n\t\tthis.setState({userPoints: this.state.userPoints + 1})\n\t};\n\n\tcomputer = () => {\n\t\tthis.setState({computerScores: this.state.computerScores + 1})\n\t};\n   render() {\n      const stylesLow = {\n      height: this.state.sizeEasyMode * 5 + 'rem',\n      width: this.state.sizeEasyMode * 5 + 'rem'\n   }\n      const stylesAverage = {\n      height: this.state.sizeEasyMode * 3 + 'rem',\n      width: this.state.sizeEasyMode * 3 + 'rem'\n   }\n\n\n      const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6',\n         'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13',\n         'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20',\n         'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n   const setBlue = () => {\n      const randomNumber = duel[Math.floor(Math.random() * 25)];\n      document.getElementById(randomNumber).style.backgroundColor = 'blue'\n      const timer = setTimeout(() => {\n         if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n            document.getElementById(randomNumber).style.backgroundColor = 'red'\n         }\n         if (document.getElementById(randomNumber).style.backgroundColor === 'red')\n            this.computer();\n         setBlue()\n      }, this.state.delayTimeEasyMode)\n      if (this.state.computerScores > 12\n          || this.state.userPoints > 12)\n         clearTimeout(timer)\n   }\n\n   const setGreen = (e) => {\n      const eventCell = e.target.style\n      if (eventCell.backgroundColor === 'blue')\n         eventCell.backgroundColor = 'green'\n      if (eventCell.backgroundColor === 'green')\n         this.user()\n   }\n\n      return (\n            <div className=\"container\">\n               <div className=\"row\">\n                  <div className=\"col-8\">\n                     <div className =\"d-flex\">\n                     <div className =\"game-level\">\n                        <GameLevel/>\n                     </div>\n\n                     <div className=\"user-name\">\n                        <UserName\n                        setBlue={setBlue}\n                        dataTransfer={this.dataTransfer}\n\n\t\t\t\t\t\t\t\t/>\n                     </div>\n                  </div>\n\n                     <div className=\"d-flex\">\n                        <div>\n                          <h4>{(this.state.computerScores > 12\n                                || this.state.userPoints > 12)\n                                ? this.state.victory: \"\"}</h4>\n                        </div>\n                        <div>\n                           <pre>   </pre>\n                        </div>\n\n                        <div>\n                           <h4>{this.state.computerScores > 12 ? \"Computer\" : \"\"\n                           ||\n                           this.state.userPoints > 12 ? this.state.yourNameState : \"\" }</h4>\n                        </div>\n                     </div>\n\n                     <div>\n                        <h4>your points: {this.state.userPoints};\n\n\n                        computer scores: {this.state.computerScores}</h4>\n\n\n                     </div>\n\n                     <div onClick={setGreen} className='cellDiv'\n                          style={stylesLow}>\n\n                        < Game\n                              sizeEasyMode={this.state.sizeEasyMode}\n                              sizeNormalMode={this.state.sizeNormalMode}\n                              sizeHardMode={this.state.sizeHardMode}\n                        />\n                     </div>\n                  </div>\n\n                  <div className=\"col\">\n                     <UserInformation\n                           dataTable={this.state.userData}\n                     />\n                  </div>\n\n               </div>\n            </div>\n      )\n   }\n}"]},"metadata":{},"sourceType":"module"}