{"ast":null,"code":"var _jsxFileName = \"D:\\\\Starnavi_test\\\\src\\\\components\\\\UserName\\\\username.js\";\nimport React, { Component } from 'react';\nexport default class UserName extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventAppeared: '',\n      value: \"\"\n    };\n    this.dataTransfer = this.props.dataTransfer;\n    this.yourNameState = this.props.yourNameState;\n\n    this.value = () => {\n      this.setState({\n        value: \"Computer\"\n      });\n    };\n\n    this.onEventChange = e => {\n      this.setState({\n        eventAppeared: e.target.value\n      });\n      this.dataTransfer(e.target.value);\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.setBlue(this.state.eventAppeared);\n      const dataWinnerUser = {\n        \"user\": {\n          'winner': this.state.eventAppeared,\n          \"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" + new Date().getDate() + \" \" + new Date().toLocaleString(\"en-us\", {\n            month: \"long\"\n          }) + \" \" + new Date().getFullYear()\n        }\n      };\n      const dataWinnerComputer = {\n        \"computer\": {\n          \"winner\": \"Computer\",\n          \"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" + new Date().getDate() + \" \" + new Date().toLocaleString(\"en-us\", {\n            month: \"long\"\n          }) + \" \" + new Date().getFullYear()\n        }\n      };\n      fetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(dataWinnerUser)\n      }); //\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n      //\t\t\tmethod: 'POST',\n      //\t\t\theaders: {\n      //\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n      //\t\t\t},\n      //\t\t\tbody: JSON.stringify(dataWinnerComputer)\n      //\t\t});\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-group username-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"user-Name\",\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.onEventChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.props.computerScores > 12 || this.props.userPoints > 12 ? \"PLAY AGAIN\" : \"PLAY\",\n      className: \"btn btn-secondary btn\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Starnavi_test/src/components/UserName/username.js"],"names":["React","Component","UserName","state","eventAppeared","value","dataTransfer","props","yourNameState","setState","onEventChange","e","target","onSubmit","preventDefault","setBlue","dataWinnerUser","Date","getHours","getMinutes","getDate","toLocaleString","month","getFullYear","dataWinnerComputer","fetch","method","headers","body","JSON","stringify","render","computerScores","userPoints"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class UserName extends Component {\n\n\tstate = {\n\t\teventAppeared: '',\n\t\tvalue: \"\"\n\t}\n\tdataTransfer = this.props.dataTransfer;\n\n\tyourNameState = this.props.yourNameState;\n\n\tvalue = () => {\n\t\tthis.setState({value: \"Computer\"})\n\t}\n\n\tonEventChange = (e) => {\n\t\tthis.setState({\n\t\t\teventAppeared: e.target.value\n\t\t})\n\t\tthis.dataTransfer(e.target.value);\n\t}\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.setBlue(this.state.eventAppeared);\n\n\t\tconst dataWinnerUser = {\n\t\t\t\"user\": {\n\t\t\t\t'winner': this.state.eventAppeared,\n\t\t\t\t\"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" +\n\t\t\t\t\t\tnew Date().getDate() + \" \" + (new Date().toLocaleString(\"en-us\", {month: \"long\"})) +\n\t\t\t\t\t\t\" \" + new Date().getFullYear()\n\t\t\t}\n\t\t}\n\t\tconst dataWinnerComputer = {\n\t\t\t\"computer\": {\n\t\t\t\t\"winner\": \"Computer\",\n\t\t\t\t\"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" +\n\t\t\t\t\t\tnew Date().getDate() + \" \" + (new Date().toLocaleString(\"en-us\", {month: \"long\"})) +\n\t\t\t\t\t\t\" \" + new Date().getFullYear()\n\t\t\t}\n\t\t}\n\n\n\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t},\n\t\t\tbody: JSON.stringify(dataWinnerUser)\n\t\t});\n\n//\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n//\t\t\tmethod: 'POST',\n//\t\t\theaders: {\n//\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n//\t\t\t},\n//\t\t\tbody: JSON.stringify(dataWinnerComputer)\n//\t\t});\n\t}\n\n\n\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t\t<form className='form-group username-form'>\n\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input placeholder='user-Name'\n\t\t\t\t\t\t\t\t\t className=\"form-control\"\n\t\t\t\t\t\t\t\t\t type='text'\n\t\t\t\t\t\t\t\t\t onChange={this.onEventChange}/>\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"submit\"\n\t\t\t\t\t\t\t\t\t value = {this.props.computerScores > 12\n\t\t\t\t\t\t\t\t\t ||\n\t\t\t\t\t\t\t\t\t this.props.userPoints > 12 ? \"PLAY AGAIN\" : \"PLAY\"}\n\t\t\t\t\t\t\t\t\t className=\"btn btn-secondary btn\"\n\t\t\t\t\t\t\t\t\t onClick={this.onSubmit}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}