{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\starnavi_12\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Game from './components/Game/game';\nimport UserName from './components/UserName/username';\nimport UserInformation from './components/UserInformation/userInformation';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sizeEasyMode: undefined,\n      sizeNormalMode: undefined,\n      sizeHardMode: undefined,\n      delayTimeEasyMode: undefined,\n      delayTimeNormalMode: undefined,\n      delayTimeHardMode: undefined,\n      userPoints: 0,\n      computerScores: 0,\n      userData: [],\n      victory: \" \"\n    };\n\n    this.victory = () => {\n      this.setState({\n        victory: \"Won in this game\"\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`);\n    const gameSettings = await response.json();\n    const responseUser = await fetch('https://starnavi-frontend-test-task.herokuapp.com/winners');\n    const userData = await responseUser.json();\n    this.setState({\n      sizeEasyMode: gameSettings.easyMode.field,\n      sizeNormalMode: gameSettings.normalMode.field,\n      sizeHardMode: gameSettings.hardMode.field,\n      delayTimeEasyMode: gameSettings.easyMode.delay,\n      delayTimeNormalMode: gameSettings.normalMode.delay,\n      delayTimeHardMode: gameSettings.hardMode.delay,\n      userData: userData\n    });\n  }\n\n  render() {\n    const userData = this.state.userData;\n    const sizeEasyMode = this.state.sizeEasyMode;\n    const delayTimeEasyMode = this.state.delayTimeEasyMode;\n    const styles = {\n      height: sizeEasyMode * 5 + 'rem',\n      width: sizeEasyMode * 5 + 'rem'\n    };\n    const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6', 'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13', 'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20', 'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n    const user = () => {\n      this.setState({\n        userPoints: this.state.userPoints + 1\n      });\n    };\n\n    console.log(this.state.userPoints);\n\n    const computer = () => {\n      this.setState({\n        computerScores: this.state.computerScores + 1\n      });\n    };\n\n    console.log(this.state.computerScores);\n    console.log(this.state.victory);\n\n    const setBlue = () => {\n      const randomNumber = duel[Math.floor(Math.random() * 25)];\n      document.getElementById(randomNumber).style.backgroundColor = 'blue';\n      const timer = setTimeout(() => {\n        if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n          document.getElementById(randomNumber).style.backgroundColor = 'red';\n        }\n\n        if (document.getElementById(randomNumber).style.backgroundColor === 'red') computer();\n        setBlue();\n      }, this.state.delayTimeEasyMode);\n      if (this.state.computerScores > 12 || this.state.userPoints > 12) clearTimeout(timer);\n    };\n\n    const setGreen = e => {\n      const eventCell = e.target.style;\n      if (eventCell.backgroundColor === 'blue') eventCell.backgroundColor = 'green';\n      if (eventCell.backgroundColor === 'green') user();\n    };\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(UserName, {\n      setBlue: setBlue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.x)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"    \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"user\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"your points: \", this.state.userPoints, \" computer scores: \", this.state.computerScores)), React.createElement(\"div\", {\n      onClick: setGreen,\n      className: \"cellDiv\",\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Game, {\n      sizeEasyMode: sizeEasyMode,\n      sizeNormalMode: this.state.sizeNormalMode,\n      sizeHardMode: this.state.sizeHardMode,\n      delayTimeEasyMode: this.state.delayTimeEasyMode,\n      delayTimeNormalMode: this.state.delayTimeNormalMode,\n      delayTimeHardMode: this.state.delayTimeHardMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(UserInformation, {\n      dataTable: userData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/starnavi_12/src/App.js"],"names":["React","Component","Game","UserName","UserInformation","App","state","sizeEasyMode","undefined","sizeNormalMode","sizeHardMode","delayTimeEasyMode","delayTimeNormalMode","delayTimeHardMode","userPoints","computerScores","userData","victory","setState","componentDidMount","response","fetch","gameSettings","json","responseUser","easyMode","field","normalMode","hardMode","delay","render","styles","height","width","duel","user","console","log","computer","setBlue","randomNumber","Math","floor","random","document","getElementById","style","backgroundColor","timer","setTimeout","clearTimeout","setGreen","e","eventCell","target","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Game from './components/Game/game';\nimport UserName from './components/UserName/username';\nimport UserInformation from  './components/UserInformation/userInformation';\n\n\nexport default class App extends Component {\n   state = {\n      sizeEasyMode: undefined,\n      sizeNormalMode: undefined,\n      sizeHardMode: undefined,\n\n      delayTimeEasyMode: undefined,\n      delayTimeNormalMode: undefined,\n      delayTimeHardMode: undefined,\n      userPoints: 0,\n      computerScores: 0,\n      userData: [],\n      victory: \" \",\n\n\n   }\n\n   async componentDidMount() {\n      const response = await\n            fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`,\n            )\n      const gameSettings = await response.json();\n\n      const responseUser = await\n            fetch('https://starnavi-frontend-test-task.herokuapp.com/winners'\n            )\n      const userData = await responseUser.json();\n\n      this.setState({\n         sizeEasyMode: gameSettings.easyMode.field,\n         sizeNormalMode: gameSettings.normalMode.field,\n         sizeHardMode: gameSettings.hardMode.field,\n\n         delayTimeEasyMode: gameSettings.easyMode.delay,\n         delayTimeNormalMode: gameSettings.normalMode.delay,\n         delayTimeHardMode: gameSettings.hardMode.delay,\n         userData: userData,\n\n      })\n\n   }\n\n   victory = () => {\n      this.setState({victory: \"Won in this game\"})\n   }\n\n\n\n\n   render() {\n\n\n\n      const userData = this.state.userData;\n\n      const sizeEasyMode = this.state.sizeEasyMode;\n      const delayTimeEasyMode = this.state.delayTimeEasyMode;\n\n\n      const styles = {\n         height: sizeEasyMode * 5 + 'rem',\n         width: sizeEasyMode * 5 + 'rem'\n      }\n\n      const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6',\n         'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13',\n         'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20',\n         'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n\n      const user = () => {\n         this.setState({userPoints: this.state.userPoints + 1})\n      }\n\n      console.log (this.state.userPoints)\n\n      const computer = () => {\n         this.setState({computerScores: this.state.computerScores + 1})\n      }\n\n      console.log (this.state.computerScores)\n\n\n      console.log (this.state.victory);\n\n\n\n\n\n\n\n\n\n\n\n\n   const setBlue = () => {\n      const randomNumber = duel[Math.floor(Math.random() * 25)];\n      document.getElementById(randomNumber).style.backgroundColor = 'blue'\n      const timer = setTimeout(() => {\n         if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n            document.getElementById(randomNumber).style.backgroundColor = 'red'\n         }\n         if (document.getElementById(randomNumber).style.backgroundColor === 'red')\n            computer();\n         setBlue()\n      }, this.state.delayTimeEasyMode)\n      if (this.state.computerScores > 12 || this.state.userPoints > 12)\n         clearTimeout(timer)\n   }\n\n   const setGreen = (e) => {\n      const eventCell = e.target.style\n      if (eventCell.backgroundColor === 'blue')\n         eventCell.backgroundColor = 'green'\n      if (eventCell.backgroundColor === 'green')\n         user()\n   }\n\n\n\n      return (\n            <div className=\"container\">\n               <div className=\"row\">\n                  <div className=\"col\">\n\n                     <div className=\"user-name\">\n                        <UserName\n                        setBlue={setBlue}/>\n                     </div>\n\n                     <div className=\"d-flex\">\n                        <div>\n                          <h3>{this.x}</h3>\n                        </div>\n                        <div>\n                           <pre>    </pre>\n                        </div>\n\n                        <div>\n                           <h3>user</h3>\n                        </div>\n                     </div>\n\n                     <div>\n                        <h4>your points: {this.state.userPoints} computer scores: {this.state.computerScores}</h4>\n                     </div>\n\n                     <div onClick={setGreen} className='cellDiv'\n                          style={styles}>\n\n                        < Game\n                              sizeEasyMode={sizeEasyMode}\n                              sizeNormalMode={this.state.sizeNormalMode}\n                              sizeHardMode={this.state.sizeHardMode}\n\n                              delayTimeEasyMode={this.state.delayTimeEasyMode}\n                              delayTimeNormalMode={this.state.delayTimeNormalMode}\n                              delayTimeHardMode={this.state.delayTimeHardMode}\n                        />\n                     </div>\n                  </div>\n\n                  <div className=\"col\">\n                     <UserInformation\n                           dataTable={userData}\n                     />\n                  </div>\n\n               </div>\n            </div>\n      )\n   }\n}"]},"metadata":{},"sourceType":"module"}