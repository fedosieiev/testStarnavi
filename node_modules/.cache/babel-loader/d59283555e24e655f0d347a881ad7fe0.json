{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\starnavi_12\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Game from './components/Game/game';\nimport UserName from './components/UserName/username';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sizeEasyMode: undefined,\n      sizeNormalMode: undefined,\n      sizeHardMode: undefined,\n      delayTimeEasyMode: undefined,\n      delayTimeNormalMode: undefined,\n      delayTimeHardMode: undefined,\n      counter: 0\n    };\n\n    this.increment = () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`);\n    const gameSettings = await response.json();\n    this.setState({\n      sizeEasyMode: gameSettings.easyMode.field,\n      sizeNormalMode: gameSettings.normalMode.field,\n      sizeHardMode: gameSettings.hardMode.field,\n      delayTimeEasyMode: gameSettings.easyMode.delay,\n      delayTimeNormalMode: gameSettings.normalMode.delay,\n      delayTimeHardMode: gameSettings.hardMode.delay\n    });\n  }\n\n  render() {\n    const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6', 'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13', 'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20', 'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n    const setBlue = rancelBlue => {\n      const randomNumber = duel[Math.floor(Math.random() * 25)];\n      rancelBlue = document.getElementById(randomNumber).style.backgroundColor = 'blue';\n      setTimeout(() => {\n        if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n          document.getElementById(randomNumber).style.backgroundColor = 'red';\n        }\n\n        setBlue();\n      }, this.state.delayTimeEasyMode);\n    };\n\n    const setGreen = e => {\n      if (e.target.style.backgroundColor === 'blue') e.target.style.backgroundColor = 'green';\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(UserName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: setBlue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Play\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"pointUser:\", this.increment), React.createElement(\"div\", {\n      onClick: setGreen,\n      style: {\n        height: this.state.sizeEasyMode * 5 + \"rem\",\n        width: this.state.sizeEasyMode * 5 + \"rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Game, {\n      sizeEasyMode: this.state.sizeEasyMode,\n      sizeNormalMode: this.state.sizeNormalMode,\n      sizeHardMode: this.state.sizeHardMode,\n      delayTimeEasyMode: this.state.delayTimeEasyMode,\n      delayTimeNormalMode: this.state.delayTimeNormalMode,\n      delayTimeHardMode: this.state.delayTimeHardMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/starnavi_12/src/App.js"],"names":["React","Component","Game","UserName","App","state","sizeEasyMode","undefined","sizeNormalMode","sizeHardMode","delayTimeEasyMode","delayTimeNormalMode","delayTimeHardMode","counter","increment","setState","componentDidMount","response","fetch","gameSettings","json","easyMode","field","normalMode","hardMode","delay","render","duel","setBlue","rancelBlue","randomNumber","Math","floor","random","document","getElementById","style","backgroundColor","setTimeout","setGreen","e","target","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Game from './components/Game/game';\nimport UserName from './components/UserName/username';\n\n\n\nexport default class App extends Component {\n\n        state = {\n            sizeEasyMode: undefined,\n            sizeNormalMode: undefined,\n            sizeHardMode: undefined,\n\n            delayTimeEasyMode: undefined,\n            delayTimeNormalMode: undefined,\n            delayTimeHardMode: undefined,\n            counter: 0,\n        }\n\n    async componentDidMount () {\n       const response = await\n            fetch(`https:starnavi-frontend-test-task.herokuapp.com/game-settings`\n            )\n        const gameSettings = await response.json();\n\n        this.setState({\n            sizeEasyMode: gameSettings.easyMode.field,\n            sizeNormalMode: gameSettings.normalMode.field,\n            sizeHardMode: gameSettings.hardMode.field,\n\n            delayTimeEasyMode: gameSettings.easyMode.delay,\n            delayTimeNormalMode: gameSettings.normalMode.delay,\n            delayTimeHardMode: gameSettings.hardMode.delay,\n\n        })\n}\n\n    increment =() =>{\n            this.setState({\n                counter: this.state.counter+1\n            })\n    }\n    render () {\n        const duel = ['duel1', 'duel2', 'duel3', 'duel4', 'duel5', 'duel6',\n            'duel7', 'duel8', 'duel9', 'duel10', 'duel11', 'duel12', 'duel13',\n            'duel14', 'duel15', 'duel16', 'duel17', 'duel18', 'duel19', 'duel20',\n            'duel21', 'duel22', 'duel23', 'duel24', 'duel25'];\n\n        const setBlue = (rancelBlue) => {\n            const randomNumber = duel[Math.floor(Math.random() * 25)];\n            rancelBlue =document.getElementById(randomNumber).style.backgroundColor = 'blue'\n            setTimeout(()=> {\n                if (document.getElementById(randomNumber).style.backgroundColor === 'blue') {\n                    document.getElementById(randomNumber).style.backgroundColor='red'\n                }\n                setBlue()\n            },this.state.delayTimeEasyMode)\n        }\n\n        const setGreen = (e) => {\n            if (e.target.style.backgroundColor === 'blue')\n                e.target.style.backgroundColor = 'green'\n        }\n\n\n        return (\n            <div>\n            <div className=\"d-flex\">\n                <UserName />\n                <div>\n                    <button onClick={setBlue}>Play</button>\n                </div>\n            </div>\n                <div>\n                    pointUser:{this.increment}\n                </div>\n                <div onClick={setGreen} style = {{\n                    height: this.state.sizeEasyMode*5+\"rem\",\n                    width: this.state.sizeEasyMode*5+\"rem\",\n                }}  >\n                < Game\n                    sizeEasyMode={this.state.sizeEasyMode}\n                    sizeNormalMode={this.state.sizeNormalMode}\n                    sizeHardMode={this.state.sizeHardMode}\n\n                    delayTimeEasyMode={this.state.delayTimeEasyMode}\n                    delayTimeNormalMode={this.state.delayTimeNormalMode}\n                    delayTimeHardMode={this.state.delayTimeHardMode}\n                />\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}