{"ast":null,"code":"var _jsxFileName = \"D:\\\\Starnavi_test\\\\src\\\\components\\\\UserName\\\\username.js\";\nimport React, { Component } from 'react';\nexport default class UserName extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventAppeared: \" \",\n      wonComputer: \"\"\n    };\n    this.dataTransfer = this.props.dataTransfer;\n    this.yourNameState = this.props.yourNameState;\n\n    this.onEventChange = e => {\n      this.setState({\n        eventAppeared: e.target.value\n      });\n    };\n\n    this.computerChange = e => {\n      e.target.value = \"Computer\";\n      this.setState({\n        wonComputer: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.setBlue(this.state.eventAppeared);\n      const dataWinnerUser = {\n        'winner': this.state.eventAppeared,\n        \"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" + new Date().getDate() + \" \" + new Date().toLocaleString(\"en-us\", {\n          month: \"long\"\n        }) + \" \" + new Date().getFullYear()\n      };\n      console.log(dataWinnerUser); //\n      //\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n      //\t\t\tmethod: 'POST',\n      //\t\t\theaders: {\n      //\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n      //\t\t\t},\n      //\t\t\tbody: JSON.stringify(dataWinnerUser)\n      //\t\t});\n      //\n\n      const dataWinnerComputer = {\n        \"winner\": this.state.wonComputer,\n        \"date\": new Date().getHours() + \":\" + new Date().getMinutes() + \"; \" + new Date().getDate() + \" \" + new Date().toLocaleString(\"en-us\", {\n          month: \"long\"\n        }) + \" \" + new Date().getFullYear()\n      };\n      console.log(dataWinnerComputer);\n      fetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: dataWinnerComputer\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.wonComputer);\n    return React.createElement(\"form\", {\n      className: \"form-group username-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"user-Name\",\n      className: \"form-control\",\n      type: \"text\",\n      onChange: this.onEventChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.computerChange ? this.onEventChange : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.props.computerScores > 12 || this.props.userPoints > 12 ? \"PLAY AGAIN\" : \"PLAY\",\n      className: \"btn btn-secondary btn\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Starnavi_test/src/components/UserName/username.js"],"names":["React","Component","UserName","state","eventAppeared","wonComputer","dataTransfer","props","yourNameState","onEventChange","e","setState","target","value","computerChange","onSubmit","preventDefault","setBlue","dataWinnerUser","Date","getHours","getMinutes","getDate","toLocaleString","month","getFullYear","console","log","dataWinnerComputer","fetch","method","headers","body","render","computerScores","userPoints"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class UserName extends Component {\r\n\r\n\tstate = {\r\n\t\teventAppeared: \" \",\r\n\t\twonComputer: \"\"\r\n\r\n\t}\r\n\r\n\tdataTransfer = this.props.dataTransfer;\r\n\r\n\tyourNameState= this.props.yourNameState;\r\n\r\n\r\n\tonEventChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\teventAppeared:e.target.value\r\n\t})\r\n\t}\r\n\r\n\tcomputerChange =(e) => {\r\n\r\n\t\te.target.value = \"Computer\"\r\n\r\n\t\tthis.setState({wonComputer:e.target.value})\r\n\t}\r\n\r\n\r\n\tonSubmit =(e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.setBlue(this.state.eventAppeared);\r\n\r\n\t const dataWinnerUser = {\r\n\t'winner' : this.state.eventAppeared ,\r\n\t\"date\": new Date().getHours() +\":\"+ new Date().getMinutes() +\"; \" +\r\n\t new Date().getDate() + \" \"+ (new Date().toLocaleString(\"en-us\", { month: \"long\" })) +\r\n\t \" \" + new Date().getFullYear()\r\n\t\t}\r\n\t\tconsole.log (dataWinnerUser);\r\n//\r\n//\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\r\n//\t\t\tmethod: 'POST',\r\n//\t\t\theaders: {\r\n//\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n//\t\t\t},\r\n//\t\t\tbody: JSON.stringify(dataWinnerUser)\r\n//\t\t});\r\n//\r\n\t\tconst dataWinnerComputer = {\r\n\t\t\t\"winner\": this.state.wonComputer ,\r\n\t\t\t\"date\": new Date().getHours() +\":\"+ new Date().getMinutes() +\"; \" +\r\n\t\t\t\t\tnew Date().getDate() + \" \"+ (new Date().toLocaleString(\"en-us\", { month: \"long\" })) +\r\n\t\t\t\t\t\" \" + new Date().getFullYear()\r\n\t\t}\r\n\t\tconsole.log (dataWinnerComputer);\r\n\r\n\r\n\r\n\r\n\r\n\t\tfetch('https://starnavi-frontend-test-task.herokuapp.com/winners', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t},\r\n\t\t\tbody: (dataWinnerComputer)\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log (this.state.wonComputer)\r\n\t\treturn (\r\n\t\t\t\t\t\t<form className='form-group username-form'>\r\n\t\t\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t\t<label>\r\n\r\n\t\t\t\t\t\t\t\t<input placeholder='user-Name'\r\n\t\t\t\t\t\t\t\t\t className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t type='text'\r\n\t\t\t\t\t\t\t\t\t onChange={this.onEventChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.computerChange?this.onEventChange:\"\"}\r\n\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type=\"submit\"\r\n\t\t\t\t\t\t\t\t\t value = {this.props.computerScores > 12\r\n\t\t\t\t\t\t\t||\r\n\t\t\t\t\t\t\tthis.props.userPoints > 12 ? \"PLAY AGAIN\" : \"PLAY\"}\r\n\t\t\t\t\t\t\t\t\t className=\"btn btn-secondary btn\"\r\n\t\t\t\t\t\t\t\t\t  onClick={this.onSubmit}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}